import org.jooq.util.GenerationTool

apply plugin: 'idea'
apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.10.6'        // jOOQ code generation package
        classpath 'org.xerial:sqlite-jdbc:3.21.0.1'     // used by generateJooq to connect to DB
    }
}

dependencies {
    // Dropwizard
    compile 'io.dropwizard:dropwizard-core:1.3.0'   // Dropwizard core
    compile 'io.dropwizard:dropwizard-jdbi:1.3.0'   // Dropwizard DB connector

    // SQLite JDBC Driver
    compile 'org.xerial:sqlite-jdbc:3.21.0.1'

    // jOOQ
    compile 'org.jooq:jooq:3.10.6'              // jOOQ main library
    compile 'org.jooq:jooq-meta:3.10.6'         // navigates DB schema for code generation
    compile 'org.jooq:jooq-codegen:3.10.6'      // generates DB schema (table and record classes)

    // Flyway migrations
    compile 'org.flywaydb:flyway-core:5.0.7'

    // Dropwizard Testing
    testCompile 'io.dropwizard:dropwizard-testing:1.3.0'

    // JUnit 5
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'         // JUnit 5 base library
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0'      // JUnit 5 Parameterized Tests
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'  // JUnit 5 engine

    // Mockito
    testCompile 'org.mockito:mockito-core:2.17.0'           // Mockito core
    testCompile 'org.mockito:mockito-junit-jupiter:2.17.0'  // Mockito JUnit 5 integration
}

test {
    // Use JUnit 5
    useJUnitPlatform()
}

// Generates the jOOQ tables and records classes
task generateJooq {
    doLast {
        GenerationTool.generate(file('jooq-config.xml').text)
    }
}
