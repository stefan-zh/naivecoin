/*
 * This file is generated by jOOQ.
*/
package com.jivecoin.app.generated;


import com.jivecoin.app.generated.tables.BlockTable;
import com.jivecoin.app.generated.tables.TxTable;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index SQLITE_AUTOINDEX_BLOCK_1 = Indexes0.SQLITE_AUTOINDEX_BLOCK_1;
    public static final Index SQLITE_AUTOINDEX_BLOCK_2 = Indexes0.SQLITE_AUTOINDEX_BLOCK_2;
    public static final Index SQLITE_AUTOINDEX_TX_1 = Indexes0.SQLITE_AUTOINDEX_TX_1;
    public static final Index SQLITE_AUTOINDEX_TX_2 = Indexes0.SQLITE_AUTOINDEX_TX_2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index SQLITE_AUTOINDEX_BLOCK_1 = Internal.createIndex("sqlite_autoindex_block_1", BlockTable.BLOCK, new OrderField[] { BlockTable.BLOCK.HASH }, true);
        public static Index SQLITE_AUTOINDEX_BLOCK_2 = Internal.createIndex("sqlite_autoindex_block_2", BlockTable.BLOCK, new OrderField[] { BlockTable.BLOCK.PREVIOUS_HASH }, true);
        public static Index SQLITE_AUTOINDEX_TX_1 = Internal.createIndex("sqlite_autoindex_tx_1", TxTable.TX, new OrderField[] { TxTable.TX.ID }, true);
        public static Index SQLITE_AUTOINDEX_TX_2 = Internal.createIndex("sqlite_autoindex_tx_2", TxTable.TX, new OrderField[] { TxTable.TX.HASH }, true);
    }
}
