/*
 * This file is generated by jOOQ.
*/
package com.jivecoin.app.generated.tables.records;


import com.jivecoin.app.generated.tables.TxTable;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TxRecord extends UpdatableRecordImpl<TxRecord> implements Record4<String, String, String, String> {

    private static final long serialVersionUID = -1543247917;

    /**
     * Setter for <code>tx.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>tx.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tx.block_hash</code>.
     */
    public void setBlockHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tx.block_hash</code>.
     */
    public String getBlockHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tx.hash</code>.
     */
    public void setHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tx.hash</code>.
     */
    public String getHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tx.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>tx.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return TxTable.TX.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TxTable.TX.BLOCK_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TxTable.TX.HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TxTable.TX.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getBlockHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBlockHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxRecord value2(String value) {
        setBlockHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxRecord value3(String value) {
        setHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TxRecord
     */
    public TxRecord() {
        super(TxTable.TX);
    }

    /**
     * Create a detached, initialised TxRecord
     */
    public TxRecord(String id, String blockHash, String hash, String type) {
        super(TxTable.TX);

        set(0, id);
        set(1, blockHash);
        set(2, hash);
        set(3, type);
    }
}
